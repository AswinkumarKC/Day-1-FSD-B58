1) HTTP stands for Hypertext Transfer Protocol. 
2) Hypertext Transfer Protocol is an application protocol used for data communication. 
3) It is the base of data communication in the World Wide Web. 
4) It provides a standard for web browsers that facilitates users to exchange information over the internet.
5) HTTP 1.1 and HTTP 2 are two versions of the Hypertext Transfer Protocol (HTTP). 
6) HTTP is the protocol used to send and receive data from web servers. 
7) HTTP 1.1 is the widely-used protocol and is considered slow and inefficient for large data transfers. 
8) HTTP 2, on the other hand, is faster and more secure. 
9) It was introduced in 2015 and is now the recommended protocol for web communication. 
10) HTTP 2 offers support for multiple connections, compression, server push, and more, making it more efficient than HTTP 1.1.
11) The first usable version of HTTP was created in 1997. Because it went through several stages of development, this first version of HTTP was called HTTP/1.1. This version is still in use on the web.
12) In 2015, a new version of HTTP called HTTP/2 was created. HTTP/2 solves several problems that the creators of HTTP/1.1 did not anticipate. In particular, HTTP/2 is much faster and more efficient than HTTP/1.1. One of the ways in which HTTP/2 is faster is in how it prioritizes content during the loading process.
13) Multiplexing: HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it. In contrast, HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource. HTTP/2 does this by splitting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to.

Server push: Typically, a server only serves content to a client device if the client asks for it. However, this approach is not always practical for modern webpages, which often involve several dozen separate resources that the client must request. HTTP/2 solves this problem by allowing a server to "push" content to a client before the client asks for it. The server also sends a message letting the client know what pushed content to expect – like if Bob had sent Alice a Table of Contents of his novel before sending the whole thing.

Header compression: Small files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 compress HTTP messages to make them smaller. However, HTTP/2 uses a more advanced compression method called HPACK that eliminates redundant information in HTTP header packets. This eliminates a few bytes from every HTTP packet. Given the volume of HTTP packets involved in loading even a single webpage, those bytes add up quickly, resulting in faster loading.


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


An object is a collection of related properties in JavaScript. Each property is a key-value pair, where the key is a string and the value is any data type, including other objects. To manage and represent objects in JavaScript, you can use the internal representation of objects known as prototypal inheritance. This allows you to organize and structure your code more effectively by creating objects that inherit properties and methods from other objects. Additionally, you can use JavaScript's object-oriented constructs, such as classes and modules, to further enhance the internal representation of objects.

objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.

For Eg. If your object is a student, it will have properties like name, age, address, id, etc and methods like updateAddress, updateNam, etc.